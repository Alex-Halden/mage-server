Ext.data.JsonP.Ext_JSON({"mixins":[],"code_type":"***REMOVED***ignment","inheritable":false,"component":false,"meta":{},"mixedInto":[],"uses":[],"aliases":{},"parentMixins":[],"supercl***REMOVED***es":[],"members":{"event":[],"property":[],"css_var":[],"method":[{"meta":{},"owner":"Ext.JSON","tagname":"method","name":"decode","id":"method-decode"},{"meta":{},"owner":"Ext.JSON","tagname":"method","name":"encode","id":"method-encode"},{"meta":{},"owner":"Ext.JSON","tagname":"method","name":"encodeDate","id":"method-encodeDate"},{"meta":{},"owner":"Ext.JSON","tagname":"method","name":"encodeString","id":"method-encodeString"},{"meta":{},"owner":"Ext.JSON","tagname":"method","name":"encodeValue","id":"method-encodeValue"}],"css_mixin":[],"cfg":[]},"tagname":"cl***REMOVED***","extends":null,"html":"<div><pre cl***REMOVED***=\"hierarchy\"><h4>Files</h4><div cl***REMOVED***='dependency'><a href='source/JSON.html#Ext-JSON' target='_blank'>JSON.js</a></div></pre><div cl***REMOVED***='doc-contents'><p>Modified version of <a href=\"http://www.json.org/js.html\">Douglas Crockford's JSON.js</a> that doesn't\nmess with the Object prototype.</p>\n</div><div cl***REMOVED***='members'><div cl***REMOVED***='members-section'><div cl***REMOVED***='definedBy'>Defined By</div><h3 cl***REMOVED***='members-title icon-method'>Methods</h3><div cl***REMOVED***='subsection'><div id='method-decode' cl***REMOVED***='member first-child not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.JSON'>Ext.JSON</span><br/><a href='source/JSON.html#Ext-JSON-method-decode' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.JSON-method-decode' cl***REMOVED***='name expandable'>decode</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> json, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a> safe]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Decodes (parses) a JSON string to an object. ...</div><div cl***REMOVED***='long'><p>Decodes (parses) a JSON string to an object. If the JSON is invalid, this function throws\na SyntaxError unless the safe option is set.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>json</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a><div cl***REMOVED***='sub-desc'><p>The JSON string</p>\n</div></li><li><span cl***REMOVED***='pre'>safe</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a> (optional)<div cl***REMOVED***='sub-desc'><p>True to return null, false to throw an exception if the JSON is invalid.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a></span><div cl***REMOVED***='sub-desc'><p>The resulting object</p>\n</div></li></ul></div></div></div><div id='method-encode' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.JSON'>Ext.JSON</span><br/><a href='source/JSON.html#Ext-JSON-method-encode' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.JSON-method-encode' cl***REMOVED***='name expandable'>encode</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> o</span> ) : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Encodes an Object, Array or other value. ...</div><div cl***REMOVED***='long'><p>Encodes an Object, Array or other value.</p>\n\n<p>If the environment's native JSON encoding is not being used (<a href=\"#!/api/Ext-property-USE_NATIVE_JSON\" rel=\"Ext-property-USE_NATIVE_JSON\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.USE_NATIVE_JSON</a> is not set,\nor the environment does not support it), then ExtJS's encoding will be used. This allows the developer\nto add a <code>toJSON</code> method to their cl***REMOVED***es which need serializing to return a valid JSON representation\nof the object.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>o</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'><p>The variable to encode</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></span><div cl***REMOVED***='sub-desc'><p>The JSON string</p>\n</div></li></ul></div></div></div><div id='method-encodeDate' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.JSON'>Ext.JSON</span><br/><a href='source/JSON.html#Ext-JSON-method-encodeDate' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.JSON-method-encodeDate' cl***REMOVED***='name expandable'>encodeDate</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Date\" rel=\"Date\" cl***REMOVED***=\"docCl***REMOVED***\">Date</a> d</span> ) : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Encodes a Date. ...</div><div cl***REMOVED***='long'><p>Encodes a Date. This returns the actual string which is inserted into the JSON string as the literal\nexpression. <strong>The returned value includes enclosing double quotation marks.</strong></p>\n\n<p>The default return format is <code>\"yyyy-mm-ddThh:mm:ss\"</code>.</p>\n\n<p>To override this:</p>\n\n<pre><code><a href=\"#!/api/Ext.JSON-method-encodeDate\" rel=\"Ext.JSON-method-encodeDate\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.JSON.encodeDate</a> = function(d) {\n    return <a href=\"#!/api/Ext.Date-method-format\" rel=\"Ext.Date-method-format\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Date.format</a>(d, '\"Y-m-d\"');\n};\n</code></pre>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>d</span> : <a href=\"#!/api/Date\" rel=\"Date\" cl***REMOVED***=\"docCl***REMOVED***\">Date</a><div cl***REMOVED***='sub-desc'><p>The Date to encode</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></span><div cl***REMOVED***='sub-desc'><p>The string literal to use in a JSON string.</p>\n</div></li></ul></div></div></div><div id='method-encodeString' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.JSON'>Ext.JSON</span><br/><a href='source/JSON.html#Ext-JSON-method-encodeString' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.JSON-method-encodeString' cl***REMOVED***='name expandable'>encodeString</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> s</span> ) : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Encodes a String. ...</div><div cl***REMOVED***='long'><p>Encodes a String. This returns the actual string which is inserted into the JSON string as the literal\nexpression. <strong>The returned value includes enclosing double quotation marks.</strong></p>\n\n<p>To override this:</p>\n\n<pre><code><a href=\"#!/api/Ext.JSON-method-encodeString\" rel=\"Ext.JSON-method-encodeString\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.JSON.encodeString</a> = function(s) {\n    return 'Foo' + s;\n};\n</code></pre>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>s</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a><div cl***REMOVED***='sub-desc'><p>The String to encode</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></span><div cl***REMOVED***='sub-desc'><p>The string literal to use in a JSON string.</p>\n</div></li></ul></div></div></div><div id='method-encodeValue' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.JSON'>Ext.JSON</span><br/><a href='source/JSON.html#Ext-JSON-method-encodeValue' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.JSON-method-encodeValue' cl***REMOVED***='name expandable'>encodeValue</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> o</span> ) : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>The function which encode uses to encode all javascript values to their JSON representations\nwhen Ext.USE_NATIVE_JSON...</div><div cl***REMOVED***='long'><p>The function which <a href=\"#!/api/Ext.JSON-method-encode\" rel=\"Ext.JSON-method-encode\" cl***REMOVED***=\"docCl***REMOVED***\">encode</a> uses to encode all javascript values to their JSON representations\nwhen <a href=\"#!/api/Ext-property-USE_NATIVE_JSON\" rel=\"Ext-property-USE_NATIVE_JSON\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.USE_NATIVE_JSON</a> is <code>false</code>.</p>\n\n<p>This is made public so that it can be replaced with a custom implementation.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>o</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'><p>Any javascript value to be converted to its JSON representation</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></span><div cl***REMOVED***='sub-desc'><p>The JSON representation of the p***REMOVED***ed value.</p>\n</div></li></ul></div></div></div></div></div></div></div>","subcl***REMOVED***es":[],"name":"Ext.JSON","alternateCl***REMOVED***Names":[],"inheritdoc":null,"files":[{"href":"JSON.html#Ext-JSON","filename":"JSON.js"}],"html_meta":{},"singleton":true,"id":"cl***REMOVED***-Ext.JSON","statics":{"property":[],"event":[],"css_var":[],"method":[],"css_mixin":[],"cfg":[]},"requires":[]});