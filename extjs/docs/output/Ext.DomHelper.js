Ext.data.JsonP.Ext_DomHelper({"mixins":[],"code_type":"nop","inheritable":false,"component":false,"meta":{},"mixedInto":[],"uses":[],"aliases":{},"parentMixins":[],"supercl***REMOVED***es":["Ext.Base","Ext.dom.AbstractHelper","Ext.dom.Helper"],"members":{"event":[],"property":[{"meta":{"private":true},"owner":"Ext.Base","tagname":"property","name":"$cl***REMOVED***Name","id":"property-S-cl***REMOVED***Name"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"property","name":"configMap","id":"property-configMap"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"property","name":"initConfigList","id":"property-initConfigList"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"property","name":"initConfigMap","id":"property-initConfigMap"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"property","name":"isInstance","id":"property-isInstance"},{"meta":{"protected":true},"owner":"Ext.Base","tagname":"property","name":"self","id":"property-self"},{"meta":{},"owner":"Ext.dom.Helper","tagname":"property","name":"useDom","id":"property-useDom"}],"css_var":[],"method":[{"meta":{},"owner":"Ext.dom.AbstractHelper","tagname":"method","name":"append","id":"method-append"},{"meta":{},"owner":"Ext.dom.AbstractHelper","tagname":"method","name":"applyStyles","id":"method-applyStyles"},{"meta":{"deprecated":{"text":"as of 4.1. Use {@link #callParent} instead."},"protected":true},"owner":"Ext.Base","tagname":"method","name":"callOverridden","id":"method-callOverridden"},{"meta":{"protected":true},"owner":"Ext.Base","tagname":"method","name":"callParent","id":"method-callParent"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"method","name":"configCl***REMOVED***","id":"method-configCl***REMOVED***"},{"meta":{"private":true},"owner":"Ext.dom.Helper","tagname":"method","name":"createContextualFragment","id":"method-createContextualFragment"},{"meta":{},"owner":"Ext.dom.Helper","tagname":"method","name":"createDom","id":"method-createDom"},{"meta":{},"owner":"Ext.dom.Helper","tagname":"method","name":"createHtml","id":"method-createHtml"},{"meta":{},"owner":"Ext.dom.Helper","tagname":"method","name":"createTemplate","id":"method-createTemplate"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"method","name":"destroy","id":"method-destroy"},{"meta":{},"owner":"Ext.dom.AbstractHelper","tagname":"method","name":"generateStyles","id":"method-generateStyles"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"method","name":"getConfig","id":"method-getConfig"},{"meta":{},"owner":"Ext.Base","tagname":"method","name":"getInitialConfig","id":"method-getInitialConfig"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"method","name":"hasConfig","id":"method-hasConfig"},{"meta":{"protected":true},"owner":"Ext.Base","tagname":"method","name":"initConfig","id":"method-initConfig"},{"meta":{},"owner":"Ext.dom.AbstractHelper","tagname":"method","name":"insertAfter","id":"method-insertAfter"},{"meta":{},"owner":"Ext.dom.AbstractHelper","tagname":"method","name":"insertBefore","id":"method-insertBefore"},{"meta":{},"owner":"Ext.dom.AbstractHelper","tagname":"method","name":"insertFirst","id":"method-insertFirst"},{"meta":{},"owner":"Ext.dom.AbstractHelper","tagname":"method","name":"insertHtml","id":"method-insertHtml"},{"meta":{"private":true},"owner":"Ext.dom.Helper","tagname":"method","name":"insertIntoTable","id":"method-insertIntoTable"},{"meta":{},"owner":"Ext.dom.AbstractHelper","tagname":"method","name":"markup","id":"method-markup"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"method","name":"onConfigUpdate","id":"method-onConfigUpdate"},{"meta":{},"owner":"Ext.dom.Helper","tagname":"method","name":"overwrite","id":"method-overwrite"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"method","name":"setConfig","id":"method-setConfig"},{"meta":{"protected":true},"owner":"Ext.Base","tagname":"method","name":"statics","id":"method-statics"}],"css_mixin":[],"cfg":[]},"tagname":"cl***REMOVED***","extends":"Ext.dom.Helper","html":"<div><pre cl***REMOVED***=\"hierarchy\"><h4>Alternate names</h4><div cl***REMOVED***='alternate-cl***REMOVED***-name'>Ext.core.DomHelper</div><h4>Hierarchy</h4><div cl***REMOVED***='subcl***REMOVED*** first-child'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='docCl***REMOVED***'>Ext.Base</a><div cl***REMOVED***='subcl***REMOVED*** '><a href='#!/api/Ext.dom.AbstractHelper' rel='Ext.dom.AbstractHelper' cl***REMOVED***='docCl***REMOVED***'>Ext.dom.AbstractHelper</a><div cl***REMOVED***='subcl***REMOVED*** '><a href='#!/api/Ext.dom.Helper' rel='Ext.dom.Helper' cl***REMOVED***='docCl***REMOVED***'>Ext.dom.Helper</a><div cl***REMOVED***='subcl***REMOVED*** '><strong>Ext.DomHelper</strong></div></div></div></div><h4>Files</h4><div cl***REMOVED***='dependency'><a href='source/Helper.html#Ext-DomHelper' target='_blank'>Helper.js</a></div></pre><div cl***REMOVED***='doc-contents'><p>The DomHelper cl***REMOVED*** provides a layer of abstraction from DOM and transparently supports creating elements via DOM or\nusing HTML fragments. It also has the ability to create HTML fragment templates from your DOM building code.</p>\n\n<h1>DomHelper element specification object</h1>\n\n<p>A specification object is used when creating elements. Attributes of this object are ***REMOVED***umed to be element\nattributes, except for 4 special attributes:</p>\n\n<ul>\n<li><strong>tag</strong> - The tag name of the element.</li>\n<li><strong>children</strong> or <strong>cn</strong> - An array of the same kind of element definition objects to be created and appended.\nThese can be nested as deep as you want.</li>\n<li><strong>cls</strong> - The cl***REMOVED*** attribute of the element. This will end up being either the \"cl***REMOVED***\" attribute on a HTML\nfragment or cl***REMOVED***Name for a DOM node, depending on whether DomHelper is using fragments or DOM.</li>\n<li><strong>html</strong> - The innerHTML for the element.</li>\n</ul>\n\n\n<p><strong>NOTE:</strong> For other arbitrary attributes, the value will currently <strong>not</strong> be automatically HTML-escaped prior to\nbuilding the element's HTML string. This means that if your attribute value contains special characters that would\nnot normally be allowed in a double-quoted attribute value, you <strong>must</strong> manually HTML-encode it beforehand (see\n<a href=\"#!/api/Ext.String-method-htmlEncode\" rel=\"Ext.String-method-htmlEncode\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.String.htmlEncode</a>) or risk malformed HTML being created. This behavior may change in a future release.</p>\n\n<h1>Insertion methods</h1>\n\n<p>Commonly used insertion methods:</p>\n\n<ul>\n<li><strong><a href=\"#!/api/Ext.DomHelper-method-append\" rel=\"Ext.DomHelper-method-append\" cl***REMOVED***=\"docCl***REMOVED***\">append</a></strong></li>\n<li><strong><a href=\"#!/api/Ext.DomHelper-method-insertBefore\" rel=\"Ext.DomHelper-method-insertBefore\" cl***REMOVED***=\"docCl***REMOVED***\">insertBefore</a></strong></li>\n<li><strong><a href=\"#!/api/Ext.DomHelper-method-insertAfter\" rel=\"Ext.DomHelper-method-insertAfter\" cl***REMOVED***=\"docCl***REMOVED***\">insertAfter</a></strong></li>\n<li><strong><a href=\"#!/api/Ext.DomHelper-method-overwrite\" rel=\"Ext.DomHelper-method-overwrite\" cl***REMOVED***=\"docCl***REMOVED***\">overwrite</a></strong></li>\n<li><strong><a href=\"#!/api/Ext.DomHelper-method-createTemplate\" rel=\"Ext.DomHelper-method-createTemplate\" cl***REMOVED***=\"docCl***REMOVED***\">createTemplate</a></strong></li>\n<li><strong><a href=\"#!/api/Ext.DomHelper-method-insertHtml\" rel=\"Ext.DomHelper-method-insertHtml\" cl***REMOVED***=\"docCl***REMOVED***\">insertHtml</a></strong></li>\n</ul>\n\n\n<h1>Example</h1>\n\n<p>This is an example, where an unordered list with 3 children items is appended to an existing element with\nid 'my-div':</p>\n\n<pre><code>var dh = <a href=\"#!/api/Ext.DomHelper\" rel=\"Ext.DomHelper\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.DomHelper</a>; // create shorthand alias\n// specification object\nvar spec = {\n    id: 'my-ul',\n    tag: 'ul',\n    cls: 'my-list',\n    // append children after creating\n    children: [     // may also specify 'cn' instead of 'children'\n        {tag: 'li', id: 'item0', html: 'List Item 0'},\n        {tag: 'li', id: 'item1', html: 'List Item 1'},\n        {tag: 'li', id: 'item2', html: 'List Item 2'}\n    ]\n};\nvar list = dh.append(\n    'my-div', // the context element 'my-div' can either be the id or the actual node\n    spec      // the specification object\n);\n</code></pre>\n\n<p>Element creation specification parameters in this cl***REMOVED*** may also be p***REMOVED***ed as an Array of specification objects. This\ncan be used to insert multiple sibling nodes into an existing container very efficiently. For example, to add more\nlist items to the example above:</p>\n\n<pre><code>dh.append('my-ul', [\n    {tag: 'li', id: 'item3', html: 'List Item 3'},\n    {tag: 'li', id: 'item4', html: 'List Item 4'}\n]);\n</code></pre>\n\n<h1>Templating</h1>\n\n<p>The real power is in the built-in templating. Instead of creating or appending any elements, <a href=\"#!/api/Ext.DomHelper-method-createTemplate\" rel=\"Ext.DomHelper-method-createTemplate\" cl***REMOVED***=\"docCl***REMOVED***\">createTemplate</a>\nreturns a Template object which can be used over and over to insert new elements. Revisiting the example above, we\ncould utilize templating this time:</p>\n\n<pre><code>// create the node\nvar list = dh.append('my-div', {tag: 'ul', cls: 'my-list'});\n// get template\nvar tpl = dh.createTemplate({tag: 'li', id: 'item{0}', html: 'List Item {0}'});\n\nfor(var i = 0; i &lt; 5, i++){\n    tpl.append(list, [i]); // use template to append to the actual node\n}\n</code></pre>\n\n<p>An example using a template:</p>\n\n<pre><code>var html = '&lt;a id=\"{0}\" href=\"{1}\" cl***REMOVED***=\"nav\"&gt;{2}&lt;/a&gt;';\n\nvar tpl = new <a href=\"#!/api/Ext.DomHelper-method-createTemplate\" rel=\"Ext.DomHelper-method-createTemplate\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.DomHelper.createTemplate</a>(html);\ntpl.append('blog-roll', ['link1', 'http://www.edspencer.net/', \"Ed's Site\"]);\ntpl.append('blog-roll', ['link2', 'http://www.dustindiaz.com/', \"Dustin's Site\"]);\n</code></pre>\n\n<p>The same example using named parameters:</p>\n\n<pre><code>var html = '&lt;a id=\"{id}\" href=\"{url}\" cl***REMOVED***=\"nav\"&gt;{text}&lt;/a&gt;';\n\nvar tpl = new <a href=\"#!/api/Ext.DomHelper-method-createTemplate\" rel=\"Ext.DomHelper-method-createTemplate\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.DomHelper.createTemplate</a>(html);\ntpl.append('blog-roll', {\n    id: 'link1',\n    url: 'http://www.edspencer.net/',\n    text: \"Ed's Site\"\n});\ntpl.append('blog-roll', {\n    id: 'link2',\n    url: 'http://www.dustindiaz.com/',\n    text: \"Dustin's Site\"\n});\n</code></pre>\n\n<h1>Compiling Templates</h1>\n\n<p>Templates are applied using regular expressions. The performance is great, but if you are adding a bunch of DOM\nelements using the same template, you can increase performance even further by <a href=\"#!/api/Ext.Template-method-compile\" rel=\"Ext.Template-method-compile\" cl***REMOVED***=\"docCl***REMOVED***\">&quot;compiling&quot;</a> the template. The way \"<a href=\"#!/api/Ext.Template-method-compile\" rel=\"Ext.Template-method-compile\" cl***REMOVED***=\"docCl***REMOVED***\">compile()</a>\" works is the template is parsed and\nbroken up at the different variable points and a dynamic function is created and eval'ed. The generated function\nperforms string concatenation of these parts and the p***REMOVED***ed variables instead of using regular expressions.</p>\n\n<pre><code>var html = '&lt;a id=\"{id}\" href=\"{url}\" cl***REMOVED***=\"nav\"&gt;{text}&lt;/a&gt;';\n\nvar tpl = new <a href=\"#!/api/Ext.DomHelper-method-createTemplate\" rel=\"Ext.DomHelper-method-createTemplate\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.DomHelper.createTemplate</a>(html);\ntpl.compile();\n\n//... use template like normal\n</code></pre>\n\n<h1>Performance Boost</h1>\n\n<p>DomHelper will transparently create HTML fragments when it can. Using HTML fragments instead of DOM can significantly\nboost performance.</p>\n\n<p>Element creation specification parameters may also be strings. If <a href=\"#!/api/Ext.DomHelper-property-useDom\" rel=\"Ext.DomHelper-property-useDom\" cl***REMOVED***=\"docCl***REMOVED***\">useDom</a> is false, then the string is used\nas innerHTML. If <a href=\"#!/api/Ext.DomHelper-property-useDom\" rel=\"Ext.DomHelper-property-useDom\" cl***REMOVED***=\"docCl***REMOVED***\">useDom</a> is true, a string specification results in the creation of a text node. Usage:</p>\n\n<pre><code><a href=\"#!/api/Ext.DomHelper-property-useDom\" rel=\"Ext.DomHelper-property-useDom\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.DomHelper.useDom</a> = true; // force it to use DOM; reduces performance\n</code></pre>\n</div><div cl***REMOVED***='members'><div cl***REMOVED***='members-section'><div cl***REMOVED***='definedBy'>Defined By</div><h3 cl***REMOVED***='members-title icon-property'>Properties</h3><div cl***REMOVED***='subsection'><div id='property-S-cl***REMOVED***Name' cl***REMOVED***='member first-child inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-S-cl***REMOVED***Name' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-S-cl***REMOVED***Name' cl***REMOVED***='name expandable'>$cl***REMOVED***Name</a><span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></span><strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'> ...</div><div cl***REMOVED***='long'>\n<p>Defaults to: <code>&quot;Ext.Base&quot;</code></p></div></div></div><div id='property-configMap' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-configMap' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-configMap' cl***REMOVED***='name expandable'>configMap</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a></span><strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'> ...</div><div cl***REMOVED***='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-initConfigList' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-initConfigList' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-initConfigList' cl***REMOVED***='name expandable'>initConfigList</a><span> : <a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a></span><strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'> ...</div><div cl***REMOVED***='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-initConfigMap' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-initConfigMap' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-initConfigMap' cl***REMOVED***='name expandable'>initConfigMap</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a></span><strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'> ...</div><div cl***REMOVED***='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-isInstance' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-isInstance' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-isInstance' cl***REMOVED***='name expandable'>isInstance</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a></span><strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'> ...</div><div cl***REMOVED***='long'>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-self' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-self' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-self' cl***REMOVED***='name expandable'>self</a><span> : <a href=\"#!/api/Ext.Cl***REMOVED***\" rel=\"Ext.Cl***REMOVED***\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Cl***REMOVED***</a></span><strong cl***REMOVED***='protected signature'>protected</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Get the reference to the current cl***REMOVED*** from which this object was instantiated. ...</div><div cl***REMOVED***='long'><p>Get the reference to the current cl***REMOVED*** from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" cl***REMOVED***=\"docCl***REMOVED***\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" cl***REMOVED***=\"docCl***REMOVED***\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getCl***REMOVED***Name\" rel=\"Ext-method-getCl***REMOVED***Name\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.getCl***REMOVED***Name</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n</div></div></div><div id='property-useDom' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.Helper' rel='Ext.dom.Helper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.Helper</a><br/><a href='source/Helper.html#Ext-dom-Helper-property-useDom' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.Helper-property-useDom' cl***REMOVED***='name expandable'>useDom</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a></span></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>True to force the use of DOM instead of html fragments. ...</div><div cl***REMOVED***='long'><p>True to force the use of DOM instead of html fragments.</p>\n<p>Defaults to: <code>false</code></p></div></div></div></div></div><div cl***REMOVED***='members-section'><div cl***REMOVED***='definedBy'>Defined By</div><h3 cl***REMOVED***='members-title icon-method'>Methods</h3><div cl***REMOVED***='subsection'><div id='method-append' cl***REMOVED***='member first-child inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.AbstractHelper' rel='Ext.dom.AbstractHelper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.AbstractHelper</a><br/><a href='source/AbstractHelper.html#Ext-dom-AbstractHelper-method-append' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.AbstractHelper-method-append' cl***REMOVED***='name expandable'>append</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a> el, <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> o, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a> returnElement]</span> ) : HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Creates new DOM element(s) and appends them to el. ...</div><div cl***REMOVED***='long'><p>Creates new DOM element(s) and appends them to el.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>el</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a><div cl***REMOVED***='sub-desc'><p>The context element</p>\n</div></li><li><span cl***REMOVED***='pre'>o</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a><div cl***REMOVED***='sub-desc'><p>The DOM object spec (and children) or raw HTML blob</p>\n</div></li><li><span cl***REMOVED***='pre'>returnElement</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a> (optional)<div cl***REMOVED***='sub-desc'><p>true to return a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'>HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></span><div cl***REMOVED***='sub-desc'><p>The new node</p>\n</div></li></ul></div></div></div><div id='method-applyStyles' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.AbstractHelper' rel='Ext.dom.AbstractHelper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.AbstractHelper</a><br/><a href='source/AbstractHelper.html#Ext-dom-AbstractHelper-method-applyStyles' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.AbstractHelper-method-applyStyles' cl***REMOVED***='name expandable'>applyStyles</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/HTMLElement el, <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> styles</span> )</div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Applies a style specification to an element. ...</div><div cl***REMOVED***='long'><p>Applies a style specification to an element.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>el</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/HTMLElement<div cl***REMOVED***='sub-desc'><p>The element to apply styles to</p>\n</div></li><li><span cl***REMOVED***='pre'>styles</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>A style specification string e.g. 'width:100px', or object in the form {width:'100px'}, or\na function which returns such a specification.</p>\n</div></li></ul></div></div></div><div id='method-callOverridden' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-callOverridden' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callOverridden' cl***REMOVED***='name expandable'>callOverridden</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a>/Arguments args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><strong cl***REMOVED***='deprecated signature'>deprecated</strong><strong cl***REMOVED***='protected signature'>protected</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...</div><div cl***REMOVED***='long'><p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" cl***REMOVED***=\"docCl***REMOVED***\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n        <div cl***REMOVED***='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" cl***REMOVED***=\"docCl***REMOVED***\">callParent</a> instead.</p>\n\n        </div>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a>/Arguments<div cl***REMOVED***='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a></span><div cl***REMOVED***='sub-desc'><p>Returns the result of calling the overridden method</p>\n</div></li></ul></div></div></div><div id='method-callParent' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-callParent' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callParent' cl***REMOVED***='name expandable'>callParent</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a>/Arguments args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><strong cl***REMOVED***='protected signature'>protected</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Call the \"parent\" method of the current method. ...</div><div cl***REMOVED***='long'><p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a>/Arguments<div cl***REMOVED***='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a></span><div cl***REMOVED***='sub-desc'><p>Returns the result of calling the parent method</p>\n</div></li></ul></div></div></div><div id='method-configCl***REMOVED***' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-configCl***REMOVED***' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-configCl***REMOVED***' cl***REMOVED***='name expandable'>configCl***REMOVED***</a>( <span cl***REMOVED***='pre'></span> )<strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'> ...</div><div cl***REMOVED***='long'>\n</div></div></div><div id='method-createContextualFragment' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.Helper' rel='Ext.dom.Helper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.Helper</a><br/><a href='source/Helper.html#Ext-dom-Helper-method-createContextualFragment' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.Helper-method-createContextualFragment' cl***REMOVED***='name expandable'>createContextualFragment</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> html</span> )<strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Fix for IE9 createContextualFragment missing method ...</div><div cl***REMOVED***='long'><p>Fix for IE9 createContextualFragment missing method</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>html</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createDom' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.Helper' rel='Ext.dom.Helper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.Helper</a><br/><a href='source/Helper.html#Ext-dom-Helper-method-createDom' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.Helper-method-createDom' cl***REMOVED***='name expandable'>createDom</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> o</span> ) : HTMLElement</div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Creates new DOM element(s) without inserting them to the document. ...</div><div cl***REMOVED***='long'><p>Creates new DOM element(s) without inserting them to the document.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>o</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a><div cl***REMOVED***='sub-desc'><p>The DOM object spec (and children) or raw HTML blob</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'>HTMLElement</span><div cl***REMOVED***='sub-desc'><p>The new uninserted node</p>\n</div></li></ul></div></div></div><div id='method-createHtml' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.Helper' rel='Ext.dom.Helper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.Helper</a><br/><a href='source/Helper.html#Ext-dom-Helper-method-createHtml' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.Helper-method-createHtml' cl***REMOVED***='name expandable'>createHtml</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> spec</span> ) : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Alias for markup. ...</div><div cl***REMOVED***='long'><p>Alias for <a href=\"#!/api/Ext.dom.Helper-method-markup\" rel=\"Ext.dom.Helper-method-markup\" cl***REMOVED***=\"docCl***REMOVED***\">markup</a>.</p>\n\n<p>Returns the markup for the p***REMOVED***ed Element(s) config.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>spec</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'><p>The DOM object spec (and children)</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></span><div cl***REMOVED***='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createTemplate' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.Helper' rel='Ext.dom.Helper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.Helper</a><br/><a href='source/Helper.html#Ext-dom-Helper-method-createTemplate' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.Helper-method-createTemplate' cl***REMOVED***='name expandable'>createTemplate</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> o</span> ) : <a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Template</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Creates a new Ext.Template from the DOM object spec. ...</div><div cl***REMOVED***='long'><p>Creates a new <a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Template</a> from the DOM object spec.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>o</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'><p>The DOM object spec (and children)</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Template</a></span><div cl***REMOVED***='sub-desc'><p>The new template</p>\n</div></li></ul></div></div></div><div id='method-destroy' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-destroy' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-destroy' cl***REMOVED***='name expandable'>destroy</a>( <span cl***REMOVED***='pre'></span> )<strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'> ...</div><div cl***REMOVED***='long'>\n<p>Overrides: <a href='#!/api/Ext.AbstractComponent-method-destroy' rel='Ext.AbstractComponent-method-destroy' cl***REMOVED***='docCl***REMOVED***'>Ext.AbstractComponent.destroy</a>, <a href='#!/api/Ext.AbstractPlugin-method-destroy' rel='Ext.AbstractPlugin-method-destroy' cl***REMOVED***='docCl***REMOVED***'>Ext.AbstractPlugin.destroy</a>, <a href='#!/api/Ext.layout.Layout-method-destroy' rel='Ext.layout.Layout-method-destroy' cl***REMOVED***='docCl***REMOVED***'>Ext.layout.Layout.destroy</a></p></div></div></div><div id='method-generateStyles' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.AbstractHelper' rel='Ext.dom.AbstractHelper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.AbstractHelper</a><br/><a href='source/AbstractHelper.html#Ext-dom-AbstractHelper-method-generateStyles' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.AbstractHelper-method-generateStyles' cl***REMOVED***='name expandable'>generateStyles</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> styles, [<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>[] buffer]</span> ) : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>[]</div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Converts the styles from the given object to text. ...</div><div cl***REMOVED***='long'><p>Converts the styles from the given object to text. The styles are CSS style names\nwith their ***REMOVED***ociated value.</p>\n\n<p>The basic form of this method returns a string:</p>\n\n<pre><code> var s = <a href=\"#!/api/Ext.DomHelper-method-generateStyles\" rel=\"Ext.DomHelper-method-generateStyles\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.DomHelper.generateStyles</a>({\n     backgroundColor: 'red'\n });\n\n // s = 'background-color:red;'\n</code></pre>\n\n<p>Alternatively, this method can append to an output array.</p>\n\n<pre><code> var buf = [];\n\n ...\n\n <a href=\"#!/api/Ext.DomHelper-method-generateStyles\" rel=\"Ext.DomHelper-method-generateStyles\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.DomHelper.generateStyles</a>({\n     backgroundColor: 'red'\n }, buf);\n</code></pre>\n\n<p>In this case, the style text is pushed on to the array and the array is returned.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>styles</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'><p>The object describing the styles.</p>\n</div></li><li><span cl***REMOVED***='pre'>buffer</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>[] (optional)<div cl***REMOVED***='sub-desc'><p>The output buffer.</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>[]</span><div cl***REMOVED***='sub-desc'><p>If buffer is p***REMOVED***ed, it is returned. Otherwise the style\nstring is returned.</p>\n</div></li></ul></div></div></div><div id='method-getConfig' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-getConfig' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getConfig' cl***REMOVED***='name expandable'>getConfig</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> name</span> )<strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'> ...</div><div cl***REMOVED***='long'>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getInitialConfig' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-getInitialConfig' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getInitialConfig' cl***REMOVED***='name expandable'>getInitialConfig</a>( <span cl***REMOVED***='pre'>[<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> name]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/Mixed</div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Returns the initial configuration p***REMOVED***ed to constructor when instantiating\nthis cl***REMOVED***. ...</div><div cl***REMOVED***='long'><p>Returns the initial configuration p***REMOVED***ed to constructor when instantiating\nthis cl***REMOVED***.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> (optional)<div cl***REMOVED***='sub-desc'><p>Name of the config option to return.</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/Mixed</span><div cl***REMOVED***='sub-desc'><p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n</div></li></ul></div></div></div><div id='method-hasConfig' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-hasConfig' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-hasConfig' cl***REMOVED***='name expandable'>hasConfig</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> config</span> )<strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'> ...</div><div cl***REMOVED***='long'>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initConfig' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-initConfig' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-initConfig' cl***REMOVED***='name expandable'>initConfig</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> config</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Base</a><strong cl***REMOVED***='protected signature'>protected</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Initialize configuration for this cl***REMOVED***. ...</div><div cl***REMOVED***='long'><p>Initialize configuration for this cl***REMOVED***. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.define</a>('My.awesome.Cl***REMOVED***', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Cl***REMOVED***({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Base</a></span><div cl***REMOVED***='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-insertAfter' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.AbstractHelper' rel='Ext.dom.AbstractHelper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.AbstractHelper</a><br/><a href='source/AbstractHelper.html#Ext-dom-AbstractHelper-method-insertAfter' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.AbstractHelper-method-insertAfter' cl***REMOVED***='name expandable'>insertAfter</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a> el, <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> o, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a> returnElement]</span> ) : HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Creates new DOM element(s) and inserts them after el. ...</div><div cl***REMOVED***='long'><p>Creates new DOM element(s) and inserts them after el.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>el</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a><div cl***REMOVED***='sub-desc'><p>The context element</p>\n</div></li><li><span cl***REMOVED***='pre'>o</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'><p>The DOM object spec (and children)</p>\n</div></li><li><span cl***REMOVED***='pre'>returnElement</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a> (optional)<div cl***REMOVED***='sub-desc'><p>true to return a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'>HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></span><div cl***REMOVED***='sub-desc'><p>The new node</p>\n</div></li></ul></div></div></div><div id='method-insertBefore' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.AbstractHelper' rel='Ext.dom.AbstractHelper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.AbstractHelper</a><br/><a href='source/AbstractHelper.html#Ext-dom-AbstractHelper-method-insertBefore' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.AbstractHelper-method-insertBefore' cl***REMOVED***='name expandable'>insertBefore</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a> el, <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> o, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a> returnElement]</span> ) : HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Creates new DOM element(s) and inserts them before el. ...</div><div cl***REMOVED***='long'><p>Creates new DOM element(s) and inserts them before el.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>el</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a><div cl***REMOVED***='sub-desc'><p>The context element</p>\n</div></li><li><span cl***REMOVED***='pre'>o</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a><div cl***REMOVED***='sub-desc'><p>The DOM object spec (and children) or raw HTML blob</p>\n</div></li><li><span cl***REMOVED***='pre'>returnElement</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a> (optional)<div cl***REMOVED***='sub-desc'><p>true to return a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'>HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></span><div cl***REMOVED***='sub-desc'><p>The new node</p>\n</div></li></ul></div></div></div><div id='method-insertFirst' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.AbstractHelper' rel='Ext.dom.AbstractHelper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.AbstractHelper</a><br/><a href='source/AbstractHelper.html#Ext-dom-AbstractHelper-method-insertFirst' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.AbstractHelper-method-insertFirst' cl***REMOVED***='name expandable'>insertFirst</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a> el, <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> o, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a> returnElement]</span> ) : HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Creates new DOM element(s) and inserts them as the first child of el. ...</div><div cl***REMOVED***='long'><p>Creates new DOM element(s) and inserts them as the first child of el.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>el</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a><div cl***REMOVED***='sub-desc'><p>The context element</p>\n</div></li><li><span cl***REMOVED***='pre'>o</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a><div cl***REMOVED***='sub-desc'><p>The DOM object spec (and children) or raw HTML blob</p>\n</div></li><li><span cl***REMOVED***='pre'>returnElement</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a> (optional)<div cl***REMOVED***='sub-desc'><p>true to return a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'>HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></span><div cl***REMOVED***='sub-desc'><p>The new node</p>\n</div></li></ul></div></div></div><div id='method-insertHtml' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.AbstractHelper' rel='Ext.dom.AbstractHelper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.AbstractHelper</a><br/><a href='source/AbstractHelper.html#Ext-dom-AbstractHelper-method-insertHtml' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.AbstractHelper-method-insertHtml' cl***REMOVED***='name expandable'>insertHtml</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> where, HTMLElement/TextNode el, <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> html</span> ) : HTMLElement</div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Inserts an HTML fragment into the DOM. ...</div><div cl***REMOVED***='long'><p>Inserts an HTML fragment into the DOM.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>where</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a><div cl***REMOVED***='sub-desc'><p>Where to insert the html in relation to el - beforeBegin, afterBegin, beforeEnd, afterEnd.</p>\n\n<p>For example take the following HTML: <code>&lt;div&gt;Contents&lt;/div&gt;</code></p>\n\n<p>Using different <code>where</code> values inserts element to the following places:</p>\n\n<ul>\n<li>beforeBegin: <code>&lt;HERE&gt;&lt;div&gt;Contents&lt;/div&gt;</code></li>\n<li>afterBegin: <code>&lt;div&gt;&lt;HERE&gt;Contents&lt;/div&gt;</code></li>\n<li>beforeEnd: <code>&lt;div&gt;Contents&lt;HERE&gt;&lt;/div&gt;</code></li>\n<li>afterEnd: <code>&lt;div&gt;Contents&lt;/div&gt;&lt;HERE&gt;</code></li>\n</ul>\n\n</div></li><li><span cl***REMOVED***='pre'>el</span> : HTMLElement/TextNode<div cl***REMOVED***='sub-desc'><p>The context element</p>\n</div></li><li><span cl***REMOVED***='pre'>html</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a><div cl***REMOVED***='sub-desc'><p>The HTML fragment</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'>HTMLElement</span><div cl***REMOVED***='sub-desc'><p>The new node</p>\n</div></li></ul></div></div></div><div id='method-insertIntoTable' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.Helper' rel='Ext.dom.Helper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.Helper</a><br/><a href='source/Helper.html#Ext-dom-Helper-method-insertIntoTable' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.Helper-method-insertIntoTable' cl***REMOVED***='name expandable'>insertIntoTable</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> tag, <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> where, <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> destinationEl, <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> html</span> )<strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Nasty code for IE's broken table implementation ...</div><div cl***REMOVED***='long'><p>Nasty code for IE's broken table implementation</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>tag</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li><li><span cl***REMOVED***='pre'>where</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li><li><span cl***REMOVED***='pre'>destinationEl</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li><li><span cl***REMOVED***='pre'>html</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li></ul></div></div></div><div id='method-markup' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.AbstractHelper' rel='Ext.dom.AbstractHelper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.AbstractHelper</a><br/><a href='source/AbstractHelper.html#Ext-dom-AbstractHelper-method-markup' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.AbstractHelper-method-markup' cl***REMOVED***='name expandable'>markup</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> spec</span> ) : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Returns the markup for the p***REMOVED***ed Element(s) config. ...</div><div cl***REMOVED***='long'><p>Returns the markup for the p***REMOVED***ed Element(s) config.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>spec</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'><p>The DOM object spec (and children)</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></span><div cl***REMOVED***='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onConfigUpdate' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-onConfigUpdate' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-onConfigUpdate' cl***REMOVED***='name expandable'>onConfigUpdate</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> names, <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> callback, <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> scope</span> )<strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'> ...</div><div cl***REMOVED***='long'>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>names</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li><li><span cl***REMOVED***='pre'>callback</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li><li><span cl***REMOVED***='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li></ul></div></div></div><div id='method-overwrite' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.dom.Helper' rel='Ext.dom.Helper' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.dom.Helper</a><br/><a href='source/Helper.html#Ext-dom-Helper-method-overwrite' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.dom.Helper-method-overwrite' cl***REMOVED***='name expandable'>overwrite</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a> el, <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> o, [<a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a> returnElement]</span> ) : HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Creates new DOM element(s) and overwrites the contents of el with them. ...</div><div cl***REMOVED***='long'><p>Creates new DOM element(s) and overwrites the contents of el with them.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>el</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a><div cl***REMOVED***='sub-desc'><p>The context element</p>\n</div></li><li><span cl***REMOVED***='pre'>o</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a><div cl***REMOVED***='sub-desc'><p>The DOM object spec (and children) or raw HTML blob</p>\n</div></li><li><span cl***REMOVED***='pre'>returnElement</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a> (optional)<div cl***REMOVED***='sub-desc'><p>true to return an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'>HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Element</a></span><div cl***REMOVED***='sub-desc'><p>The new node</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.dom.AbstractHelper-method-overwrite' rel='Ext.dom.AbstractHelper-method-overwrite' cl***REMOVED***='docCl***REMOVED***'>Ext.dom.AbstractHelper.overwrite</a></p></div></div></div><div id='method-setConfig' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-setConfig' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-setConfig' cl***REMOVED***='name expandable'>setConfig</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> config, <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> applyIfNotSet</span> )<strong cl***REMOVED***='private signature'>private</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'> ...</div><div cl***REMOVED***='long'>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li><li><span cl***REMOVED***='pre'>applyIfNotSet</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'>\n</div></li></ul></div></div></div><div id='method-statics' cl***REMOVED***='member  inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' cl***REMOVED***='defined-in docCl***REMOVED***'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-statics' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-statics' cl***REMOVED***='name expandable'>statics</a>( <span cl***REMOVED***='pre'></span> ) : <a href=\"#!/api/Ext.Cl***REMOVED***\" rel=\"Ext.Cl***REMOVED***\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Cl***REMOVED***</a><strong cl***REMOVED***='protected signature'>protected</strong></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Get the reference to the cl***REMOVED*** from which this object was instantiated. ...</div><div cl***REMOVED***='long'><p>Get the reference to the cl***REMOVED*** from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" cl***REMOVED***=\"docCl***REMOVED***\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the cl***REMOVED*** from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getCl***REMOVED***Name\" rel=\"Ext-method-getCl***REMOVED***Name\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.getCl***REMOVED***Name</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n<h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Ext.Cl***REMOVED***\" rel=\"Ext.Cl***REMOVED***\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Cl***REMOVED***</a></span><div cl***REMOVED***='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","subcl***REMOVED***es":[],"name":"Ext.DomHelper","alternateCl***REMOVED***Names":["Ext.core.DomHelper"],"inheritdoc":null,"files":[{"href":"Helper.html#Ext-DomHelper","filename":"Helper.js"}],"html_meta":{},"singleton":true,"id":"cl***REMOVED***-Ext.DomHelper","statics":{"property":[],"event":[],"css_var":[],"method":[],"css_mixin":[],"cfg":[]},"requires":[]});