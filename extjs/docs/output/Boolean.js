Ext.data.JsonP.Boolean({"mixins":[],"code_type":"nop","inheritable":false,"component":false,"meta":{},"mixedInto":[],"uses":[],"aliases":{},"parentMixins":[],"supercl***REMOVED***es":[],"members":{"event":[],"property":[],"css_var":[],"method":[{"meta":{},"owner":"Boolean","tagname":"method","name":"constructor","id":"method-constructor"},{"meta":{},"owner":"Boolean","tagname":"method","name":"toString","id":"method-toString"},{"meta":{},"owner":"Boolean","tagname":"method","name":"valueOf","id":"method-valueOf"}],"css_mixin":[],"cfg":[]},"tagname":"cl***REMOVED***","extends":null,"html":"<div><pre cl***REMOVED***=\"hierarchy\"><h4>Files</h4><div cl***REMOVED***='dependency'><a href='source/Boolean.html#Boolean' target='_blank'>Boolean.js</a></div></pre><div cl***REMOVED***='doc-contents'><p>The <code>Boolean</code> object is an object wrapper for a boolean value.</p>\n\n<p>The value p***REMOVED***ed as the first parameter is converted to a boolean value, if necessary. If value is\nomitted or is 0, -0, null, false, <code>NaN</code>, undefined, or the empty string (\"\"), the object has an\ninitial value of false. All other values, including any object or the string <code>\"false\"</code>, create an\nobject with an initial value of true.</p>\n\n<p>Do not confuse the primitive Boolean values true and false with the true and false values of the\nBoolean object.</p>\n\n<p>Any object whose value is not <code>undefined</code> or <code>null</code>, including a Boolean object whose value is false,\nevaluates to true when p***REMOVED***ed to a conditional statement. For example, the condition in the following\nif statement evaluates to true:</p>\n\n<pre><code>x = new Boolean(false);\nif (x) {\n    // . . . this code is executed\n}\n</code></pre>\n\n<p>This behavior does not apply to Boolean primitives. For example, the condition in the following if\nstatement evaluates to <code>false</code>:</p>\n\n<pre><code>x = false;\nif (x) {\n    // . . . this code is not executed\n}\n</code></pre>\n\n<p>Do not use a <code>Boolean</code> object to convert a non-boolean value to a boolean value. Instead, use Boolean\nas a function to perform this task:</p>\n\n<pre><code>x = Boolean(expression);     // preferred\nx = new Boolean(expression); // don't use\n</code></pre>\n\n<p>If you specify any object, including a Boolean object whose value is false, as the initial value of a\nBoolean object, the new Boolean object has a value of true.</p>\n\n<pre><code>myFalse = new Boolean(false);   // initial value of false\ng = new Boolean(myFalse);       // initial value of true\nmyString = new String(\"Hello\"); // string object\ns = new Boolean(myString);      // initial value of true\n</code></pre>\n\n<p>Do not use a Boolean object in place of a Boolean primitive.</p>\n\n<h1>Creating Boolean objects with an initial value of false</h1>\n\n<pre><code>bNoParam = new Boolean();\nbZero = new Boolean(0);\nbNull = new Boolean(null);\nbEmptyString = new Boolean(\"\");\nbfalse = new Boolean(false);\n</code></pre>\n\n<h1>Creating Boolean objects with an initial value of true</h1>\n\n<pre><code>btrue = new Boolean(true);\nbtrueString = new Boolean(\"true\");\nbfalseString = new Boolean(\"false\");\nbSuLin = new Boolean(\"Su Lin\");\n</code></pre>\n\n<div cl***REMOVED***=\"notice\">\nDocumentation for this cl***REMOVED*** comes from <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Boolean\">MDN</a>\nand is available under <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">Creative Commons: Attribution-Sharealike license</a>.\n</div>\n\n</div><div cl***REMOVED***='members'><div cl***REMOVED***='members-section'><div cl***REMOVED***='definedBy'>Defined By</div><h3 cl***REMOVED***='members-title icon-method'>Methods</h3><div cl***REMOVED***='subsection'><div id='method-constructor' cl***REMOVED***='member first-child not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Boolean'>Boolean</span><br/><a href='source/Boolean.html#Boolean-method-constructor' target='_blank' cl***REMOVED***='view-source'>view source</a></div><strong cl***REMOVED***='new-keyword'>new</strong><a href='#!/api/Boolean-method-constructor' cl***REMOVED***='name expandable'>Boolean</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> value</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Creates a new boolean object. ...</div><div cl***REMOVED***='long'><p>Creates a new boolean object.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>value</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'><p>Either a truthy or falsy value to create the corresponding Boolean object.</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a></span><div cl***REMOVED***='sub-desc'>\n</div></li></ul></div></div></div><div id='method-toString' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Boolean'>Boolean</span><br/><a href='source/Boolean.html#Boolean-method-toString' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Boolean-method-toString' cl***REMOVED***='name expandable'>toString</a>( <span cl***REMOVED***='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Returns a string of either \"true\" or \"false\" depending upon the value of the object. ...</div><div cl***REMOVED***='long'><p>Returns a string of either \"true\" or \"false\" depending upon the value of the object.\nOverrides the <code>Object.prototype.toString</code> method.</p>\n\n<p>The Boolean object overrides the <code>toString</code> method of the <code>Object</code> object; it does not inherit\n<code><a href=\"#!/api/Object-method-toString\" rel=\"Object-method-toString\" cl***REMOVED***=\"docCl***REMOVED***\">Object.toString</a></code>. For Boolean objects, the <code>toString</code> method returns a string representation of\nthe object.</p>\n\n<p>JavaScript calls the <code>toString</code> method automatically when a Boolean is to be represented as a text\nvalue or when a Boolean is referred to in a string concatenation.</p>\n\n<p>For Boolean objects and values, the built-in <code>toString</code> method returns the string <code>\"true\"</code> or\n<code>\"false\"</code> depending on the value of the boolean object. In the following code, <code>flag.toString</code>\nreturns <code>\"true\"</code>.</p>\n\n<pre><code>var flag = new Boolean(true)\nvar myVar = flag.toString()\n</code></pre>\n<h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a></span><div cl***REMOVED***='sub-desc'><p>The boolean value represented as a string.</p>\n</div></li></ul></div></div></div><div id='method-valueOf' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Boolean'>Boolean</span><br/><a href='source/Boolean.html#Boolean-method-valueOf' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Boolean-method-valueOf' cl***REMOVED***='name expandable'>valueOf</a>( <span cl***REMOVED***='pre'></span> ) : <a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Returns the primitive value of the Boolean object. ...</div><div cl***REMOVED***='long'><p>Returns the primitive value of the <code>Boolean</code> object. Overrides the <code>Object.prototype.valueOf</code> method.</p>\n\n<p>The <code>valueOf</code> method of Boolean returns the primitive value of a Boolean object or literal Boolean\nas a Boolean data type.</p>\n\n<p>This method is usually called internally by JavaScript and not explicitly in code.</p>\n\n<pre><code>x = new Boolean();\nmyVar = x.valueOf()      //***REMOVED***igns false to myVar\n</code></pre>\n<h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a></span><div cl***REMOVED***='sub-desc'><p>The primitive value.</p>\n</div></li></ul></div></div></div></div></div></div></div>","subcl***REMOVED***es":[],"name":"Boolean","alternateCl***REMOVED***Names":[],"inheritdoc":null,"files":[{"href":"Boolean.html#Boolean","filename":"Boolean.js"}],"html_meta":{},"singleton":false,"id":"cl***REMOVED***-Boolean","statics":{"property":[],"event":[],"css_var":[],"method":[],"css_mixin":[],"cfg":[]},"requires":[]});