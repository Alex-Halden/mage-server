Ext.data.JsonP.Ext_Function({"mixins":[],"code_type":"***REMOVED***ignment","inheritable":false,"component":false,"meta":{},"mixedInto":[],"uses":[],"aliases":{},"parentMixins":[],"supercl***REMOVED***es":[],"members":{"event":[],"property":[],"css_var":[],"method":[{"meta":{},"owner":"Ext.Function","tagname":"method","name":"alias","id":"method-alias"},{"meta":{},"owner":"Ext.Function","tagname":"method","name":"bind","id":"method-bind"},{"meta":{},"owner":"Ext.Function","tagname":"method","name":"clone","id":"method-clone"},{"meta":{},"owner":"Ext.Function","tagname":"method","name":"createBuffered","id":"method-createBuffered"},{"meta":{},"owner":"Ext.Function","tagname":"method","name":"createDelayed","id":"method-createDelayed"},{"meta":{},"owner":"Ext.Function","tagname":"method","name":"createInterceptor","id":"method-createInterceptor"},{"meta":{},"owner":"Ext.Function","tagname":"method","name":"createSequence","id":"method-createSequence"},{"meta":{},"owner":"Ext.Function","tagname":"method","name":"createThrottled","id":"method-createThrottled"},{"meta":{},"owner":"Ext.Function","tagname":"method","name":"defer","id":"method-defer"},{"meta":{},"owner":"Ext.Function","tagname":"method","name":"flexSetter","id":"method-flexSetter"},{"meta":{},"owner":"Ext.Function","tagname":"method","name":"interceptAfter","id":"method-interceptAfter"},{"meta":{},"owner":"Ext.Function","tagname":"method","name":"interceptBefore","id":"method-interceptBefore"},{"meta":{},"owner":"Ext.Function","tagname":"method","name":"p***REMOVED***","id":"method-p***REMOVED***"}],"css_mixin":[],"cfg":[]},"tagname":"cl***REMOVED***","extends":null,"html":"<div><pre cl***REMOVED***=\"hierarchy\"><h4>Alternate names</h4><div cl***REMOVED***='alternate-cl***REMOVED***-name'>Ext.util.Functions</div><h4>Files</h4><div cl***REMOVED***='dependency'><a href='source/Function2.html#Ext-Function' target='_blank'>Function.js</a></div></pre><div cl***REMOVED***='doc-contents'><p>A collection of useful static methods to deal with function callbacks</p>\n</div><div cl***REMOVED***='members'><div cl***REMOVED***='members-section'><div cl***REMOVED***='definedBy'>Defined By</div><h3 cl***REMOVED***='members-title icon-method'>Methods</h3><div cl***REMOVED***='subsection'><div id='method-alias' cl***REMOVED***='member first-child not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-alias' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-alias' cl***REMOVED***='name expandable'>alias</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> object, <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> methodName</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Create an alias to the provided method property with name methodName of object. ...</div><div cl***REMOVED***='long'><p>Create an alias to the provided method property with name <code>methodName</code> of <code>object</code>.\nNote that the execution scope will still be bound to the provided <code>object</code> itself.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>object</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a>/<a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'>\n</div></li><li><span cl***REMOVED***='pre'>methodName</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a><div cl***REMOVED***='sub-desc'>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></span><div cl***REMOVED***='sub-desc'><p>aliasFn</p>\n</div></li></ul></div></div></div><div id='method-bind' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-bind' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-bind' cl***REMOVED***='name expandable'>bind</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> fn, [<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> scope], [<a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a> args], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a> appendArgs]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Create a new function from the provided fn, change this to the provided scope, optionally\noverrides arguments for the...</div><div cl***REMOVED***='long'><p>Create a new function from the provided <code>fn</code>, change <code>this</code> to the provided scope, optionally\noverrides arguments for the call. (Defaults to the arguments p***REMOVED***ed by the caller)</p>\n\n<p><a href=\"#!/api/Ext-method-bind\" rel=\"Ext-method-bind\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.bind</a> is alias for <a href=\"#!/api/Ext.Function-method-bind\" rel=\"Ext.Function-method-bind\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Function.bind</a></p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>The function to delegate.</p>\n</div></li><li><span cl***REMOVED***='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> (optional)<div cl***REMOVED***='sub-desc'><p>The scope (<code>this</code> reference) in which the function is executed.\n<strong>If omitted, defaults to the default global environment object (usually the browser window).</strong></p>\n</div></li><li><span cl***REMOVED***='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a> (optional)<div cl***REMOVED***='sub-desc'><p>Overrides arguments for the call. (Defaults to the arguments p***REMOVED***ed by the caller)</p>\n</div></li><li><span cl***REMOVED***='pre'>appendArgs</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a> (optional)<div cl***REMOVED***='sub-desc'><p>if True args are appended to call args instead of overriding,\nif a number the args are inserted at the specified position</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></span><div cl***REMOVED***='sub-desc'><p>The new function</p>\n</div></li></ul></div></div></div><div id='method-clone' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-clone' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-clone' cl***REMOVED***='name expandable'>clone</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> method</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Create a \"clone\" of the provided method. ...</div><div cl***REMOVED***='long'><p>Create a \"clone\" of the provided method. The returned method will call the given\nmethod p***REMOVED***ing along all arguments and the \"this\" pointer and return its result.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>method</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></span><div cl***REMOVED***='sub-desc'><p>cloneFn</p>\n</div></li></ul></div></div></div><div id='method-createBuffered' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-createBuffered' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-createBuffered' cl***REMOVED***='name expandable'>createBuffered</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> fn, <a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a> buffer, [<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> scope], [<a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a> args]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Creates a delegate function, optionally with a bound scope which, when called, buffers\nthe execution of the p***REMOVED***ed fu...</div><div cl***REMOVED***='long'><p>Creates a delegate function, optionally with a bound scope which, when called, buffers\nthe execution of the p***REMOVED***ed function for the configured number of milliseconds.\nIf called again within that period, the impending invocation will be canceled, and the\ntimeout period will begin again.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>The function to invoke on a buffered timer.</p>\n</div></li><li><span cl***REMOVED***='pre'>buffer</span> : <a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a><div cl***REMOVED***='sub-desc'><p>The number of milliseconds by which to buffer the invocation of the\nfunction.</p>\n</div></li><li><span cl***REMOVED***='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> (optional)<div cl***REMOVED***='sub-desc'><p>The scope (<code>this</code> reference) in which\nthe p***REMOVED***ed function is executed. If omitted, defaults to the scope specified by the caller.</p>\n</div></li><li><span cl***REMOVED***='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a> (optional)<div cl***REMOVED***='sub-desc'><p>Override arguments for the call. Defaults to the arguments\np***REMOVED***ed by the caller.</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></span><div cl***REMOVED***='sub-desc'><p>A function which invokes the p***REMOVED***ed function after buffering for the specified time.</p>\n</div></li></ul></div></div></div><div id='method-createDelayed' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-createDelayed' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-createDelayed' cl***REMOVED***='name expandable'>createDelayed</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> fn, <a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a> delay, [<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> scope], [<a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a> args], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a> appendArgs]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Creates a delegate (callback) which, when called, executes after a specific delay. ...</div><div cl***REMOVED***='long'><p>Creates a delegate (callback) which, when called, executes after a specific delay.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>The function which will be called on a delay when the returned function is called.\nOptionally, a replacement (or additional) argument list may be specified.</p>\n</div></li><li><span cl***REMOVED***='pre'>delay</span> : <a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a><div cl***REMOVED***='sub-desc'><p>The number of milliseconds to defer execution by whenever called.</p>\n</div></li><li><span cl***REMOVED***='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> (optional)<div cl***REMOVED***='sub-desc'><p>The scope (<code>this</code> reference) used by the function at execution time.</p>\n</div></li><li><span cl***REMOVED***='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a> (optional)<div cl***REMOVED***='sub-desc'><p>Override arguments for the call. (Defaults to the arguments p***REMOVED***ed by the caller)</p>\n</div></li><li><span cl***REMOVED***='pre'>appendArgs</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a> (optional)<div cl***REMOVED***='sub-desc'><p>if True args are appended to call args instead of overriding,\nif a number the args are inserted at the specified position.</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></span><div cl***REMOVED***='sub-desc'><p>A function which, when called, executes the original function after the specified delay.</p>\n</div></li></ul></div></div></div><div id='method-createInterceptor' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-createInterceptor' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-createInterceptor' cl***REMOVED***='name expandable'>createInterceptor</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> origFn, <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> newFn, [<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> scope], [<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> returnValue]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Creates an interceptor function. ...</div><div cl***REMOVED***='long'><p>Creates an interceptor function. The p***REMOVED***ed function is called before the original one. If it returns false,\nthe original one is not called. The resulting function returns the results of the original function.\nThe p***REMOVED***ed function is called with the parameters of the original function. Example usage:</p>\n\n<pre><code>var sayHi = function(name){\n    alert('Hi, ' + name);\n}\n\***REMOVED***yHi('Fred'); // alerts \"Hi, Fred\"\n\n// create a new function that validates input without\n// directly modifying the original function:\nvar sayHiToFriend = <a href=\"#!/api/Ext.Function-method-createInterceptor\" rel=\"Ext.Function-method-createInterceptor\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Function.createInterceptor</a>(sayHi, function(name){\n    return name == 'Brian';\n});\n\***REMOVED***yHiToFriend('Fred');  // no alert\***REMOVED***yHiToFriend('Brian'); // alerts \"Hi, Brian\"\n</code></pre>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>origFn</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>The original function.</p>\n</div></li><li><span cl***REMOVED***='pre'>newFn</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>The function to call before the original</p>\n</div></li><li><span cl***REMOVED***='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> (optional)<div cl***REMOVED***='sub-desc'><p>The scope (<code>this</code> reference) in which the p***REMOVED***ed function is executed.\n<strong>If omitted, defaults to the scope in which the original function is called or the browser window.</strong></p>\n</div></li><li><span cl***REMOVED***='pre'>returnValue</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> (optional)<div cl***REMOVED***='sub-desc'><p>The value to return if the p***REMOVED***ed function return false (defaults to null).</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></span><div cl***REMOVED***='sub-desc'><p>The new function</p>\n</div></li></ul></div></div></div><div id='method-createSequence' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-createSequence' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-createSequence' cl***REMOVED***='name expandable'>createSequence</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> originalFn, <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> newFn, [<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> scope]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Create a combined function call sequence of the original function + the p***REMOVED***ed function. ...</div><div cl***REMOVED***='long'><p>Create a combined function call sequence of the original function + the p***REMOVED***ed function.\nThe resulting function returns the results of the original function.\nThe p***REMOVED***ed function is called with the parameters of the original function. Example usage:</p>\n\n<pre><code>var sayHi = function(name){\n    alert('Hi, ' + name);\n}\n\***REMOVED***yHi('Fred'); // alerts \"Hi, Fred\"\n\nvar sayGoodbye = <a href=\"#!/api/Ext.Function-method-createSequence\" rel=\"Ext.Function-method-createSequence\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Function.createSequence</a>(sayHi, function(name){\n    alert('Bye, ' + name);\n});\n\***REMOVED***yGoodbye('Fred'); // both alerts show\n</code></pre>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>originalFn</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>The original function.</p>\n</div></li><li><span cl***REMOVED***='pre'>newFn</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>The function to sequence</p>\n</div></li><li><span cl***REMOVED***='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> (optional)<div cl***REMOVED***='sub-desc'><p>The scope (<code>this</code> reference) in which the p***REMOVED***ed function is executed.\nIf omitted, defaults to the scope in which the original function is called or the default global environment object (usually the browser window).</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></span><div cl***REMOVED***='sub-desc'><p>The new function</p>\n</div></li></ul></div></div></div><div id='method-createThrottled' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-createThrottled' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-createThrottled' cl***REMOVED***='name expandable'>createThrottled</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> fn, <a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a> interval, [<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> scope]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Creates a throttled version of the p***REMOVED***ed function which, when called repeatedly and\nrapidly, invokes the p***REMOVED***ed func...</div><div cl***REMOVED***='long'><p>Creates a throttled version of the p***REMOVED***ed function which, when called repeatedly and\nrapidly, invokes the p***REMOVED***ed function only after a certain interval has elapsed since the\nprevious invocation.</p>\n\n<p>This is useful for wrapping functions which may be called repeatedly, such as\na handler of a mouse move event when the processing is expensive.</p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>The function to execute at a regular time interval.</p>\n</div></li><li><span cl***REMOVED***='pre'>interval</span> : <a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a><div cl***REMOVED***='sub-desc'><p>The interval <strong>in milliseconds</strong> on which the p***REMOVED***ed function is executed.</p>\n</div></li><li><span cl***REMOVED***='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> (optional)<div cl***REMOVED***='sub-desc'><p>The scope (<code>this</code> reference) in which\nthe p***REMOVED***ed function is executed. If omitted, defaults to the scope specified by the caller.</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></span><div cl***REMOVED***='sub-desc'><p>A function which invokes the p***REMOVED***ed function at the specified interval.</p>\n</div></li></ul></div></div></div><div id='method-defer' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-defer' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-defer' cl***REMOVED***='name expandable'>defer</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> fn, <a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a> millis, [<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> scope], [<a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a> args], [<a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a> appendArgs]</span> ) : <a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Calls this function after the number of millseconds specified, optionally in a specific scope. ...</div><div cl***REMOVED***='long'><p>Calls this function after the number of millseconds specified, optionally in a specific scope. Example usage:</p>\n\n<pre><code>var sayHi = function(name){\n    alert('Hi, ' + name);\n}\n\n// executes immediately:\***REMOVED***yHi('Fred');\n\n// executes after 2 seconds:\n<a href=\"#!/api/Ext.Function-method-defer\" rel=\"Ext.Function-method-defer\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Function.defer</a>(sayHi, 2000, this, ['Fred']);\n\n// this syntax is sometimes useful for deferring\n// execution of an anonymous function:\n<a href=\"#!/api/Ext.Function-method-defer\" rel=\"Ext.Function-method-defer\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Function.defer</a>(function(){\n    alert('Anonymous');\n}, 100);\n</code></pre>\n\n<p><a href=\"#!/api/Ext-method-defer\" rel=\"Ext-method-defer\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.defer</a> is alias for <a href=\"#!/api/Ext.Function-method-defer\" rel=\"Ext.Function-method-defer\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Function.defer</a></p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>The function to defer.</p>\n</div></li><li><span cl***REMOVED***='pre'>millis</span> : <a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a><div cl***REMOVED***='sub-desc'><p>The number of milliseconds for the setTimeout call\n(if less than or equal to 0 the function is executed immediately)</p>\n</div></li><li><span cl***REMOVED***='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> (optional)<div cl***REMOVED***='sub-desc'><p>The scope (<code>this</code> reference) in which the function is executed.\n<strong>If omitted, defaults to the browser window.</strong></p>\n</div></li><li><span cl***REMOVED***='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a> (optional)<div cl***REMOVED***='sub-desc'><p>Overrides arguments for the call. (Defaults to the arguments p***REMOVED***ed by the caller)</p>\n</div></li><li><span cl***REMOVED***='pre'>appendArgs</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" cl***REMOVED***=\"docCl***REMOVED***\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a> (optional)<div cl***REMOVED***='sub-desc'><p>if True args are appended to call args instead of overriding,\nif a number the args are inserted at the specified position</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Number\" rel=\"Number\" cl***REMOVED***=\"docCl***REMOVED***\">Number</a></span><div cl***REMOVED***='sub-desc'><p>The timeout id that can be used with clearTimeout</p>\n</div></li></ul></div></div></div><div id='method-flexSetter' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-flexSetter' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-flexSetter' cl***REMOVED***='name expandable'>flexSetter</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> setter</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>A very commonly used method throughout the framework. ...</div><div cl***REMOVED***='long'><p>A very commonly used method throughout the framework. It acts as a wrapper around another method\nwhich originally accepts 2 arguments for <code>name</code> and <code>value</code>.\nThe wrapped function then allows \"flexible\" value setting of either:</p>\n\n<ul>\n<li><code>name</code> and <code>value</code> as 2 arguments</li>\n<li>one single object argument with multiple key - value pairs</li>\n</ul>\n\n\n<p>For example:</p>\n\n<pre><code>var setValue = <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Function.flexSetter</a>(function(name, value) {\n    this[name] = value;\n});\n\n// Afterwards\n// Setting a single name - value\nsetValue('name1', 'value1');\n\n// Settings multiple name - value pairs\nsetValue({\n    name1: 'value1',\n    name2: 'value2',\n    name3: 'value3'\n});\n</code></pre>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>setter</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></span><div cl***REMOVED***='sub-desc'><p>flexSetter</p>\n</div></li></ul></div></div></div><div id='method-interceptAfter' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-interceptAfter' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-interceptAfter' cl***REMOVED***='name expandable'>interceptAfter</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> object, <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> methodName, <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> fn, [<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> scope]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Adds behavior to an existing method that is executed after the\noriginal behavior of the function. ...</div><div cl***REMOVED***='long'><p>Adds behavior to an existing method that is executed after the\noriginal behavior of the function.  For example:</p>\n\n<pre><code>var soup = {\n    contents: [],\n    add: function(ingredient) {\n        this.contents.push(ingredient);\n    }\n};\n<a href=\"#!/api/Ext.Function-method-interceptAfter\" rel=\"Ext.Function-method-interceptAfter\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Function.interceptAfter</a>(soup, \"add\", function(ingredient){\n    // Always add a bit of extra salt\n    this.contents.push(\"salt\");\n});\nsoup.add(\"water\");\nsoup.add(\"onions\");\nsoup.contents; // will contain: water, salt, onions, salt\n</code></pre>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>object</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'><p>The target object</p>\n</div></li><li><span cl***REMOVED***='pre'>methodName</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a><div cl***REMOVED***='sub-desc'><p>Name of the method to override</p>\n</div></li><li><span cl***REMOVED***='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>Function with the new behavior.  It will\nbe called with the same arguments as the original method.  The\nreturn value of this function will be the return value of the\nnew method.</p>\n</div></li><li><span cl***REMOVED***='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> (optional)<div cl***REMOVED***='sub-desc'><p>The scope to execute the interceptor function. Defaults to the object.</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></span><div cl***REMOVED***='sub-desc'><p>The new function just created.</p>\n</div></li></ul></div></div></div><div id='method-interceptBefore' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-interceptBefore' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-interceptBefore' cl***REMOVED***='name expandable'>interceptBefore</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> object, <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a> methodName, <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> fn, [<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> scope]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Adds behavior to an existing method that is executed before the\noriginal behavior of the function. ...</div><div cl***REMOVED***='long'><p>Adds behavior to an existing method that is executed before the\noriginal behavior of the function.  For example:</p>\n\n<pre><code>var soup = {\n    contents: [],\n    add: function(ingredient) {\n        this.contents.push(ingredient);\n    }\n};\n<a href=\"#!/api/Ext.Function-method-interceptBefore\" rel=\"Ext.Function-method-interceptBefore\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Function.interceptBefore</a>(soup, \"add\", function(ingredient){\n    if (!this.contents.length &amp;&amp; ingredient !== \"water\") {\n        // Always add water to start with\n        this.contents.push(\"water\");\n    }\n});\nsoup.add(\"onions\");\nsoup.add(\"salt\");\nsoup.contents; // will contain: water, onions, salt\n</code></pre>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>object</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a><div cl***REMOVED***='sub-desc'><p>The target object</p>\n</div></li><li><span cl***REMOVED***='pre'>methodName</span> : <a href=\"#!/api/String\" rel=\"String\" cl***REMOVED***=\"docCl***REMOVED***\">String</a><div cl***REMOVED***='sub-desc'><p>Name of the method to override</p>\n</div></li><li><span cl***REMOVED***='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>Function with the new behavior.  It will\nbe called with the same arguments as the original method.  The\nreturn value of this function will be the return value of the\nnew method.</p>\n</div></li><li><span cl***REMOVED***='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> (optional)<div cl***REMOVED***='sub-desc'><p>The scope to execute the interceptor function. Defaults to the object.</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></span><div cl***REMOVED***='sub-desc'><p>The new function just created.</p>\n</div></li></ul></div></div></div><div id='method-p***REMOVED***' cl***REMOVED***='member  not-inherited'><a href='#' cl***REMOVED***='side expandable'><span>&nbsp;</span></a><div cl***REMOVED***='title'><div cl***REMOVED***='meta'><span cl***REMOVED***='defined-in' rel='Ext.Function'>Ext.Function</span><br/><a href='source/Function2.html#Ext-Function-method-p***REMOVED***' target='_blank' cl***REMOVED***='view-source'>view source</a></div><a href='#!/api/Ext.Function-method-p***REMOVED***' cl***REMOVED***='name expandable'>p***REMOVED***</a>( <span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a> fn, <a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a> args, [<a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> scope]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></div><div cl***REMOVED***='description'><div cl***REMOVED***='short'>Create a new function from the provided fn, the arguments of which are pre-set to args. ...</div><div cl***REMOVED***='long'><p>Create a new function from the provided <code>fn</code>, the arguments of which are pre-set to <code>args</code>.\nNew arguments p***REMOVED***ed to the newly created callback when it's invoked are appended after the pre-set ones.\nThis is especially useful when creating callbacks.</p>\n\n<p>For example:</p>\n\n<pre><code>var originalFunction = function(){\n    alert(<a href=\"#!/api/Ext.Array-method-from\" rel=\"Ext.Array-method-from\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Array.from</a>(arguments).join(' '));\n};\n\nvar callback = <a href=\"#!/api/Ext.Function-method-p***REMOVED***\" rel=\"Ext.Function-method-p***REMOVED***\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Function.p***REMOVED***</a>(originalFunction, ['Hello', 'World']);\n\ncallback(); // alerts 'Hello World'\ncallback('by Me'); // alerts 'Hello World by Me'\n</code></pre>\n\n<p><a href=\"#!/api/Ext-method-p***REMOVED***\" rel=\"Ext-method-p***REMOVED***\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.p***REMOVED***</a> is alias for <a href=\"#!/api/Ext.Function-method-p***REMOVED***\" rel=\"Ext.Function-method-p***REMOVED***\" cl***REMOVED***=\"docCl***REMOVED***\">Ext.Function.p***REMOVED***</a></p>\n<h3 cl***REMOVED***=\"pa\">Parameters</h3><ul><li><span cl***REMOVED***='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a><div cl***REMOVED***='sub-desc'><p>The original function</p>\n</div></li><li><span cl***REMOVED***='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" cl***REMOVED***=\"docCl***REMOVED***\">Array</a><div cl***REMOVED***='sub-desc'><p>The arguments to p***REMOVED*** to new callback</p>\n</div></li><li><span cl***REMOVED***='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" cl***REMOVED***=\"docCl***REMOVED***\">Object</a> (optional)<div cl***REMOVED***='sub-desc'><p>The scope (<code>this</code> reference) in which the function is executed.</p>\n</div></li></ul><h3 cl***REMOVED***='pa'>Returns</h3><ul><li><span cl***REMOVED***='pre'><a href=\"#!/api/Function\" rel=\"Function\" cl***REMOVED***=\"docCl***REMOVED***\">Function</a></span><div cl***REMOVED***='sub-desc'><p>The new callback function</p>\n</div></li></ul></div></div></div></div></div></div></div>","subcl***REMOVED***es":[],"name":"Ext.Function","alternateCl***REMOVED***Names":["Ext.util.Functions"],"inheritdoc":null,"files":[{"href":"Function2.html#Ext-Function","filename":"Function.js"}],"html_meta":{},"singleton":true,"id":"cl***REMOVED***-Ext.Function","statics":{"property":[],"event":[],"css_var":[],"method":[],"css_mixin":[],"cfg":[]},"requires":[]});