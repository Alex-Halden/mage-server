
.. currentmodule:: GeoExt.data

:cl***REMOVED***:`GeoExt.data.AttributeStore`
================================================================================


.. csscl***REMOVED***:: meta


Extends
    * `Ext.data.Store <http://dev.sencha.com/deploy/dev/docs/?cl***REMOVED***=Ext.data.Store>`_
    






.. cl***REMOVED***:: AttributeStore(config)

    Small helper cl***REMOVED*** to make creating stores for remotely-loaded attributes
    data easier. AttributeStore is pre-configured with a built-in
    ``Ext.data.HttpProxy`` and :cl***REMOVED***:`GeoExt.data.AttributeReader`.  The
    HttpProxy is configured to allow caching (disableCaching: false) and
    uses GET. If you require some other proxy/reader combination then you'll
    have to configure this with your own proxy or create a basic
    ``Ext.data.Store`` and configure as needed.


    


Config Options
--------------

Configuration properties in addition to
those listed for `Ext.data.Store <http://dev.sencha.com/deploy/dev/docs/?cl***REMOVED***=Ext.data.Store>`_.


.. describe:: feature

    ``OpenLayers.Feature.Vector``
    A vector feature. If provided, and if the reader is a
    :cl***REMOVED***:`GeoExt.data.AttributeReader` (the default), then records
    of this store will include a field named "value" referencing the
    corresponding attribute value in the feature. And if the "value"
    field of a record is updated the update will propagate to the
    corresponding feature attribute. Optional.

.. describe:: fields

    ``Array or Function``
    Either an array of field definition objects as p***REMOVED***ed to
    ``Ext.data.Record.create``, or a record constructor created using
    ``Ext.data.Record.create``.  Defaults to ``["name", "type", "restriction"]``.

.. describe:: format

    ``OpenLayers.Format``
    A parser for transforming the XHR response into an array of objects
    representing attributes.  Defaults to an
    ``OpenLayers.Format.WFSDescribeFeatureType`` parser.









